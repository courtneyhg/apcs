Water: Fang Chen, Brianna Tieu, Courtney Huang [Duckies: Cat, Pepe, Rick]
APCS pd06
L07 -- But These Go Up to Eleven
2022-03-21

Activity 2:
- A card is part of the deck.
- We needed to create external arrays to utilize as inputs in DeckTester, which
  initially tripped us up.
- The order of the elements in the arrays doesn't matter, as the constructor is
  defaulted to go through all the possibilities to create every type of card.

Activity 3:
- The perfectShuffle method seemed to be a very inefficient way to shuffle the
  cards, as it assigns half of the deck even indices and the other half odd
  indices. The pdf states the only 8 "perfect shuffles" would return the deck
  back to the original state.
- The selectionShuffle is much more efficient at actually creating a randomly
  organized deck and the "efficient selection shuffle" was easier to write than
  the original algo presented in the pdf. However, we can also question the
  machine's reliability in terms of generating actual "random" ints.
- To complete flip an array using the efficient selection shuffle, the random
  ints must increase by 1 starting from 0 for every iteration. This is because
  the method approaches the deck of cards from the end (or last index).

Activity 4:
- The implementation of the efficient selection shuffle remained the same as
  written in Shuffler.java, except for the required use of ArrayList.
- Jokers are not included within a standard 52 card deck.

Activity 5:
- Buggy1:

Activity 7:
- To play the game Elevens, a standard deck of cards is going to be needed, the
  player's current hand, the cards the player will discard and the new cards
  the player is picking up.
- The cards are dealed when a new game is started and in the constructor.
- The methods containsPairSum11 and containsJQK should both be called in the
  method anotherPlayisPossible, which should check for more moves that the
  player can make, which would include checking for and discarding any pairs of
  11 or J's, Q's and K's.

Activity 8:
- All of the games require a deck of cards and cards to play with. There will
  also be common methods such as deal and shuffle. However, only Elevens
  requires a pair of 11 to be removed. There will also be different definitions
  for what a possible move is for the three games.
- You would have to define a relationship between Board.java and
  ElevensBoard.java in order to initialize all the variables required. This is
  seen at the top of ElevensBoard.java, where it "extends Board".
- They do cover the differences between Elevens and Thirteens because they all
  have different definitions for what a win, a valid play and what must be
  removed.

Activity 9:
- We can use the signature abstract after the declaration of privacy in a methods
  if we are trying to create methods that are in common between two programs,
  but will be run under different conditions.
- size() isn't an abstract method because size() returns the length of the deck
  of cards, which both Elevens and Thirteens need.
- There are no methods dealing with the selection of cards to be removed or
  replaced in the array cards because cards refers to the entire deck of cards.
  The entire deck simply needs to be able to replace the cards in the player's
  hand in both games, so no abstract methods are required.
